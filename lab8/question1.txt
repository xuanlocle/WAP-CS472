
1. Please answer the following: 

What is LibUV?
Explain the difference between setImmediate(f) and setTimeout(f, Time)?
Explain the difference between process.nextTick(f) and setImmediate(f)?



1. LibUV is:
- a multi-platform support library with a focus on asynchronous I/O.
- Asynchronous file and file system operations
- Libuv helps handle asynchronous operations in Node.js.
- For async operations like a network request, libuv relies on the operating system primitives.
- For async operations like reading a file that has no native OS support, libuv relies on its thread pool to ensure that the main thread is not blocked. 


2. setTimeout
- schedules a callback to run after a specific time, the functions are registered in the timers phase of the event loop.

setImmediate
- schedules a callback to run at check phase of the event loop after IO events callbacks.

For example:
setTimeout(() => { console.log('timeout'); }, 0);
setImmediate(() => { console.log('immediate'); });
==> the 'immediate' will be invoke first to print the console, then 'timeout'

3. 
setImmediate: 
- schedules a callback to run at check phase of the event loop after IO events callbacks.
- is a part of the event loop (check phase)

nextTick:
- process.nextTick() is not part of the event loop, it adds the callback into the nextTick queue. 
- Node processes all the callbacks in the nextTick queue after the current operation completes and before the event loop continues.
*recursively setting nextTick callbacks will block any I/O from happening, (just like a while(true) loop)


For example: 
setImmediate(() => { console.log('immediate'); });
process.nextTick(() => console.log('nexttick'));
==> the 'nexttick' will be invoke first to print the console, then 'immediate'